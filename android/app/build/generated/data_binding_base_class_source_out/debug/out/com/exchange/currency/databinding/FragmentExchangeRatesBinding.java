// Generated by view binder compiler. Do not edit!
package com.exchange.currency.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.exchange.currency.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentExchangeRatesBinding implements ViewBinding {
  @NonNull
  private final SwipeRefreshLayout rootView;

  @NonNull
  public final TextInputEditText editSearch;

  @NonNull
  public final TextInputLayout layoutSearch;

  @NonNull
  public final RecyclerView recyclerRates;

  @NonNull
  public final SwipeRefreshLayout swipeRefresh;

  private FragmentExchangeRatesBinding(@NonNull SwipeRefreshLayout rootView,
      @NonNull TextInputEditText editSearch, @NonNull TextInputLayout layoutSearch,
      @NonNull RecyclerView recyclerRates, @NonNull SwipeRefreshLayout swipeRefresh) {
    this.rootView = rootView;
    this.editSearch = editSearch;
    this.layoutSearch = layoutSearch;
    this.recyclerRates = recyclerRates;
    this.swipeRefresh = swipeRefresh;
  }

  @Override
  @NonNull
  public SwipeRefreshLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentExchangeRatesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentExchangeRatesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_exchange_rates, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentExchangeRatesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editSearch;
      TextInputEditText editSearch = ViewBindings.findChildViewById(rootView, id);
      if (editSearch == null) {
        break missingId;
      }

      id = R.id.layoutSearch;
      TextInputLayout layoutSearch = ViewBindings.findChildViewById(rootView, id);
      if (layoutSearch == null) {
        break missingId;
      }

      id = R.id.recyclerRates;
      RecyclerView recyclerRates = ViewBindings.findChildViewById(rootView, id);
      if (recyclerRates == null) {
        break missingId;
      }

      SwipeRefreshLayout swipeRefresh = (SwipeRefreshLayout) rootView;

      return new FragmentExchangeRatesBinding((SwipeRefreshLayout) rootView, editSearch,
          layoutSearch, recyclerRates, swipeRefresh);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
